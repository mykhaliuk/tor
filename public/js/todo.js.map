{"version":3,"names":[],"mappings":"","sources":["todo.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = {\n\n    toast: function toast(message, displayLength, styleClassName, iconClassName, completeCallback) {\n\n        var iconedMessage = '';\n\n        if (!iconClassName || iconClassName.lenght <= 0) {\n            iconedMessage = message;\n        } else {\n            iconedMessage = '<i class=\"fa ' + iconClassName + ' fa-lg\"></i>&nbsp' + message;\n        }\n\n        Materialize.toast(iconedMessage, displayLength, styleClassName, completeCallback);\n    },\n\n    contentValid: function contentValid(content) {\n\n        if (!content || content.match(/^\\s/)) return false;\n        return true;\n    }\n\n};\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _lib = require('../lib.js');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (event) {\n\n    var toast = _lib2.default.toast,\n        $input = $('[name = \"input\"]'),\n        $collection = $('.collection'),\n        content = $input.val();\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (!_lib2.default.contentValid(content)) {\n\n        toast(\"Sorry, Todo can't be started with a space!\", 5000, 'toast-warning', 'fa-info');\n        return;\n    };\n\n    $.post('/api/todo/add', { 'content': content }).done(function (data) {\n        $input.val(''); //clear input\n\n        var $div = $(data);\n\n        $div.hide();\n        $collection.prepend($div);\n        $div.velocity({ opacity: 1 }, {\n            display: \"block\",\n            duration: 500,\n            easing: \"easeInSine\"\n        });\n    }).fail(function (err) {\n        toast(\"Opps! Can't add new intem. \" + err.responseText, 5000, 'toast-error', 'fa-exclamation');\n    });\n};\n\n},{\"../lib.js\":1}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _lib = require('lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar toast = _lib2.default.toast;\n\nexports.default = function (event) {\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    var $el_a = $(event.target).parent(),\n        $el_li = $el_a.parent(),\n        $span = $el_li.find('span'),\n        content = $span.text(),\n        id = $(event.target).data('id');\n\n    $el_a.detach();\n    $el_li.text('').append('<input id=\"edit-todo\" type=\"text\">');\n\n    var $tempInput = $('#edit-todo');\n    $tempInput.val(content).focus();\n\n    $tempInput.on('change', function (e) {\n\n        e.preventDefault();\n        e.stopPropagation();\n\n        update(id, $span, $el_a, $el_li, $tempInput, content);\n    });\n\n    console.log($(event.target));\n    console.log($el_a, $el_li);\n    console.log(content);\n};\n\nfunction update(id, $span, $el_a, $el_li, $tempInput, content) {\n\n    if (!_lib2.default.contentValid($tempInput.val())) return;\n\n    $.post('/api/todo/update', {\n        'id': id,\n        'content': $tempInput.val()\n    }).done(function () {\n        $span.text($tempInput.val());\n        $tempInput.detach();\n        $span.appendTo($el_li);\n        $el_a.appendTo($el_li);\n        $el_li.prependTo($('.collection'));\n\n        toast(\"Saved\", 2000, 'toast-success', 'fa-check');\n        console.log('Edited. id: ', id);\n    }).fail(function (err) {\n        toast(\"Opps! Can't update todo. Error: \" + err.responseText, 5000, 'toast-error');\n        $el_li.text(content);\n        $el_a.appendTo($el_li);\n        console.log(err);\n    });\n}\n\n},{\"lib\":1}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lib = require('../lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar toast = _lib2.default.toast;\n\nexports.default = function () {\n\n  var $input = $('[name = \"input\"]'),\n      $collection = $('.collection');\n\n  $.get('/api/todo/get-all').done(function (data) {\n    //console.log( data );\n    $collection.append(data);\n    $input.focus();\n    toast(\"All todos are synced successfully!\", 2500, 'toast-success', 'fa-info');\n  }).fail(function (err) {\n    toast(\"Opps! Can't get todos. Error: \" + err.responseText, 5000, 'toast-error', 'fa-exclamation');\n  });\n};\n\n},{\"../lib\":1}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _lib = require('../lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar toast = _lib2.default.toast;\n\nexports.default = function (event) {\n\n    var $element = $(event.target),\n        id = $element.data('id');\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    $.get('/api/todo/remove/' + id).done(function () {\n        var $el_li = $element.parent().parent();\n\n        $element.velocity({\n            opacity: 0,\n            scale: 3\n        }, {\n            duration: 300,\n            complete: function complete() {\n                $el_li.velocity({\n                    opacity: 0,\n                    translateX: '100%'\n                }, {\n                    duration: 500,\n                    complete: function complete() {\n                        $el_li.remove();\n                    }\n                });\n            }\n        });\n    }).fail(function (err) {\n        toast(\"Opps! Can't remove this intem. Error: \" + err.responseText, 5000, 'toast-warning', 'fa-exclamation');\n        console.log(err);\n    });\n};\n\n},{\"../lib\":1}],6:[function(require,module,exports){\n'use strict';\n\nvar _lib = require('../lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _getAllTodo = require('_get-all-todo');\n\nvar _getAllTodo2 = _interopRequireDefault(_getAllTodo);\n\nvar _addTodo = require('_add-todo');\n\nvar _addTodo2 = _interopRequireDefault(_addTodo);\n\nvar _removeTodo = require('_remove-todo');\n\nvar _removeTodo2 = _interopRequireDefault(_removeTodo);\n\nvar _editTodo = require('_edit-todo');\n\nvar _editTodo2 = _interopRequireDefault(_editTodo);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n$(function () {\n  var $input = $('#new-todo'),\n      $body = $('body');\n\n  (0, _getAllTodo2.default)();\n\n  $input.change(_addTodo2.default);\n  $body.on('click', '.edit-todo', _editTodo2.default);\n  $body.on('click', '.delete-todo', _removeTodo2.default);\n  //$body.on('click', '.done-todo', makeDone); //todo: to implement \n});\n\n// todo: implement components with fetch()  \n\n/*fetch ( '/api/t o d o/add', {\n method:  \"POST\",\n headers: {\n 'Content-Type': 'application/json'\n },\n body:    {\"0000000\": \"fjkldfslkjsdf\"}\n } )\n .then ( status )\n .then ( json )\n .then ( data => {\n console.log ( ' 000 Request succeeded with JSON response', data );\n } ).catch ( error => {\n console.log ( ' !!! Request failed: ', error );\n } );\n function status ( response ) {\n if ( response.status >= 200 && response.status < 300 ) {\n return Promise.resolve ( response )\n } else {\n return Promise.reject ( new Error ( response.statusText ) )\n }\n }\n\n function json ( response ) {\n return response.json ()\n }\n */\n\n},{\"../lib\":1,\"_add-todo\":2,\"_edit-todo\":3,\"_get-all-todo\":4,\"_remove-todo\":5}]},{},[6]);\n"],"file":"todo.js"}